#! /usr/bin/env python3

"""
Trabalho 1 da disciplina Seguranca Computacional - CIC

Autores: Luiz Carlos Schonarth Junior
         Bruno Fernandes Teixeira

Universidade de Brasilia
"""

import sys, getopt 
from string import ascii_lowercase

ALPHABET = 'abcdefghijklmnopqrstuvwxyz'

def index_of_coincidence(sequence: str):
    counts = [0] * len(ALPHABET)
    for char in sequence.lower():
        counts[ALPHABET.find(char)] += 1

    sum = 0
    total = 0
    seq_len = len(sequence)
    for i in range(len(ALPHABET)):
        sum += counts[i] * (counts[i]-1)

    return sum/(seq_len * (seq_len-1))


def find_key_len(ciphertext: str):
    found = False
    key_len = 0
    all_iocs = []
    ciphertext = ''.join([c for c in ciphertext if c in ascii_lowercase])
    while not found:
        key_len += 1
        slices = [''] * key_len
        for i in range(len(ciphertext)):
            slices[i % key_len] += ciphertext[i]

        avg_ioc = 0
        for slice in slices:
            print(slice)
            avg_ioc += index_of_coincidence(slice)
        avg_ioc = avg_ioc / key_len
        all_iocs.append((key_len, avg_ioc))

        if key_len == 20:
            found = True

    print(all_iocs)


def main():
    # Parse command line arguments
    try:
        opts, args = getopt.getopt(sys.argv[1:], "f:m:", ["freq-file=", "method="])
    except getopt.GetoptError as err:
        print(err, file=sys.stderr) 
        sys.exit(1)
        
    freq_file = ""
    method = ""
    for o, a in opts:
        if o in ('-f', '--freq-file'):
            freq_file = a
        elif o in ('-m', '--method'):
            method = a
        else:
            print("ERROR: Unhadled option.", file=sys.stderr)
            sys.exit(1)

    text = sys.stdin.read()
    print(freq_file)
    print(method)

    match method:
        case "ioc":
            # index_of_coincidence(freq_file, text)
            find_key_len(text)
        case _:
            print(f"ERROR: No method '{method}'.", file=sys.stderr)
            sys.exit(1)


if __name__ == "__main__":
    main()
